<?php

// –ü–∞—Ç—Ç–µ—Ä–Ω Repository ‚Äî "–ü—Ä–æ—Å–ª–æ–π–∫–∞ –º–µ–∂–¥—É –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–æ–π –∏ –¥–∞–Ω–Ω—ã–º–∏"

// üß† –ó–∞—á–µ–º –æ–Ω –Ω—É–∂–µ–Ω?
// –ü–∞—Ç—Ç–µ—Ä–Ω Repository –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–¥–µ–ª–∏—Ç—å –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –æ—Ç –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞.
// –¢—ã —Å–æ–∑–¥–∞—ë—à—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π-–∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –∫–∞–∫ –±—ã "–ø—Ä–∏—Ç–≤–æ—Ä—è–µ—Ç—Å—è –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –æ–±—ä–µ–∫—Ç–æ–≤", –Ω–æ –≤–Ω—É—Ç—Ä–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç SQL, PDO –∏–ª–∏ ORM.

//üì¶ –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Å—Ö–µ–º–∞:

interface UserRepositoryInterface {
    public function findById(int $id): ?User;
    public function save(User $user): void;
    public function delete(User $user): void;
}

class MySqlUserRepository implements UserRepositoryInterface {
    public function findById(int $id): ?User {
        // –í—ã–ø–æ–ª–Ω–∏—Ç—å SELECT –∏ –≤–µ—Ä–Ω—É—Ç—å –æ–±—ä–µ–∫—Ç User
    }

    public function save(User $user): void {
        // INSERT –∏–ª–∏ UPDATE –≤ –ë–î
    }

    public function delete(User $user): void {
        // DELETE
    }
}

class UserService {
    private UserRepositoryInterface $repo;

    public function __construct(UserRepositoryInterface $repo) {
        $this->repo = $repo;
    }

    public function removeUser(int $id): void {
        $user = $this->repo->findById($id);
        if ($user) {
            $this->repo->delete($user);
        }
    }
}

// ü§ñ –ß—Ç–æ –¥–∞—ë—Ç Repository:
// –û—Ç–¥–µ–ª—è–µ—Ç –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É –æ—Ç –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–π
// –ú–æ–∂–Ω–æ –ª–µ–≥–∫–æ –∑–∞–º–µ–Ω–∏—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, MySQL –Ω–∞ MongoDB
// –£–ø—Ä–æ—â–∞–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–º–æ–∂–Ω–æ –∑–∞–º–æ–∫–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π)
// –£–ª—É—á—à–∞–µ—Ç —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å
