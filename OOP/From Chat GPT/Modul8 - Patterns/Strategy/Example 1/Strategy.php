<?php

//Strategy ‚Äî —ç—Ç–æ —à–∞–±–ª–æ–Ω, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∏–∑–º–µ–Ω—è—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –Ω–∞ –ª–µ—Ç—É, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É —Ä–∞–∑–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã (—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏) –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã.

//  –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∏–∑ –∂–∏–∑–Ω–∏:
// –î–æ–ø—É—Å—Ç–∏–º, —É –Ω–∞—Å –µ—Å—Ç—å –≤–æ–∏–Ω. –û–Ω –º–æ–∂–µ—Ç –∞—Ç–∞–∫–æ–≤–∞—Ç—å –ø–æ-—Ä–∞–∑–Ω–æ–º—É:

// –ò–Ω–æ–≥–¥–∞ ‚Äî –º–µ—á–æ–º ‚öîÔ∏è

// –ò–Ω–æ–≥–¥–∞ ‚Äî –ª—É–∫–æ–º üèπ

// –ò–Ω–æ–≥–¥–∞ ‚Äî –º–∞–≥–∏–µ–π üî•

// –ú—ã —Å–æ–∑–¥–∞—ë–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã-—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –∫–∞–∂–¥—ã–π —Å–æ —Å–≤–æ–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π –º–µ—Ç–æ–¥–∞ attack()
// –ê –æ–±—ä–µ–∫—Ç –í–æ–∏–Ω–∞ –ø–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—é —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∏–ª–∏ –º–µ—Ç–æ–¥, –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –µ—ë, –Ω–µ –∑–∞–±–æ—Ç—è—Å—å –æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ª–æ–≥–∏–∫–µ.


interface AttackStrategy {
    public function attack(): void;
}

class SwordAttack implements AttackStrategy {
    public function attack(): void {
        echo "–ê—Ç–∞–∫—É–µ—Ç –º–µ—á–æ–º!";
    }
}

class BowAttack implements AttackStrategy {
    public function attack(): void {
        echo "–°—Ç—Ä–µ–ª—è–µ—Ç –∏–∑ –ª—É–∫–∞!";
    }
}

class Warrior {
    private AttackStrategy $strategy;

    public function __construct(AttackStrategy $strategy) {
        $this->strategy = $strategy;
    }

    public function setStrategy(AttackStrategy $strategy): void {
        $this->strategy = $strategy;
    }

    public function attack(): void {
        $this->strategy->attack();
    }
}

$warrior = new Warrior(new SwordAttack());
$warrior->attack(); // –ê—Ç–∞–∫—É–µ—Ç –º–µ—á–æ–º!

$warrior->setStrategy(new BowAttack());
$warrior->attack(); // –°—Ç—Ä–µ–ª—è–µ—Ç –∏–∑ –ª—É–∫–∞!
